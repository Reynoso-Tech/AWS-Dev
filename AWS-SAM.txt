DynamoDB is serverless, RDS is NOT
S3 is serverless
Lambda & API Gateway are serverless

Lambda:

Can be used as an event-driven compute service where AWS Lambda runs your code in response to events.
Can be used as a compute service to run your code in response to HTTP requests using AWS API Gateway or API calls using AWS SDKs

Priced by:
Number of requests.
First 1 million requests are free. $0.20 per 1 million requests afterwards

Duration
Rounds up runtime to nearst 100ms. Price depends on memory allocated

Lambda scales out, NOT up, automatically

Lambda can trigger another lambda function

Lambda Versions:
Newly created function gets only 1 version: $LATEST
If you update version then $LATEST is replaced

Lambda Concurrent Executions Limit:
Limits concurrent executions per region per account
Default is 1,000 concurrent executions
Returns error “TooManyRequestsException”, HTTP 429
Can contact AWS to request an increase


Lambda & VPCs:
Lambda can be granted access into VPCs, for shutting down an EC2 instance or accessing an RDS instance
Needs private subnet ID of resources you want to access & Security group ID
Lambda uses this to setup ENIs using an available IP in subnet
Lambda execution role will need policies to create ENIs
Allow: ec2:CreateNetworkInterface
Allow: ec2:DeleteNetworkInterface
Allow: ec2:DescribeNetworkInterface


API Gateway:

Types of APIs
REST APIs (Representational State Transfer)
	- Uses JSON
SOAP APIs (Simple Object Access Protocol)
	- Uses XML

A “front door” to services like EC2, Lambda, DynamoDB, etc.
Exposes HTTPS endpoint to define a RESTful API

Configuration:
Define an API (Container)
Define Resources & nested resources (URL paths)
For each resource
Select supported HTTP methods (verbs)
Set security
Target ( EC2, Lambda, DynamoDB, etc.)
Set request & response transformations
Deploy API to a stage (prod, test, dev)
Uses API Gateway domain by default, but can use custom domain
Now supports AWS Cert Manager

API Caching:
You can enable API caching in API Gateway to cache common responses.
Reduces number of calls to endpoint
Response cached for a specified TTL period in seconds


Same Origin Policy:
Concept in web app security model.
Web browsers permit scripts in first web page to access data in a second web page only if both pages have the same origin
This helps prevent Cross-Site Scripting (XSS) attacks.
Enforced by web browsers, Ignored by tools like curl & PostMan

CORS - Cross-Origin Resource Sharing
Allows a server to use resources outside the domain the first resource was served
Error “Origin policy cannot be read at the remote resource” means you need to enable CORS on API Gateway
CORS enforced by client (web browsers)

Import APIs:
You can use API Gateway Import to import an API from an external definition file
Currently supports Swagger v2.0 definition files

API Throttling:
By default, API Gateway limits request rate to 10,000 requests per second (rps)
Max concurrent requests is 5000 across entire AWS account 
If you go over rps or concurrent requests limit: HTTP 429, TooManyRequest error

SOAP Webservice Passthrough - You can configure API Gateway to communicate with legacy SOAP 

Step Functions - Provides a GUI to arrange & visualize components of your serverless application as a series of steps 

X-Ray:

A service that collects data about the requests that your application serves.
Helps visualize serverless application

X-Ray SDK pushes JSON info to X-Ray Daemon, X-Ray Daemon pushes info to X-Ray API, X-Ray API displays data in X-Ray Console

X-Ray SDK provides:
Interceptors to add into your code to trace incoming http requests
Client handlers to instrument AWS SDK clients that your app uses
An HTTP client to use for calls to other internal & external HTTP servers

Integrates with:
ELB
Lambda
API Gateway
EC2
Elastic Beanstalk

Languages supported:
Java, Go, Node, Python, Ruby, C#/.Net

X-Ray Config:
X-Ray daemon has to be running on EC2 instance or on-prem server running code
Daemon needs to be in EC2 instance if using Elastic Beanstalk
For ECS install X-Ray daemon in its own Docker container in your ECS cluster with app

Annotations:
Key-value pairs that are indexed with the traces
